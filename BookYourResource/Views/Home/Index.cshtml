@{
    ViewData["Title"] = "Home Page";
}

@* <div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div> *@


@model List<ReservationViewModel>


<div class="container">
    <div class="row">
        <div class="col-md-8"> <!-- Left Column for Reservations -->
            <h2>Active Reservations</h2>

            @if (User.Identity.IsAuthenticated)
            {
                <a asp-action="CreateReservationForm" class="btn btn-success mb-2">NEW</a>
                <input id="search-input" type="text" placeholder="Search by resource name..." class="form-control mb-3" style="display:inline-block; width: 200px;" />
            }

            <table class="table">
                <thead>
                    <tr>
                        <th>Resource Name</th>
                        <th>User</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Hours</th>
                        @if (User.Identity.IsAuthenticated) 
                        {
                            <th>Actions</th>
                        }
                    </tr>
                </thead>
                <tbody id="reservations-table-body">
                    @if (Model != null && Model.Any())
                    {
                        foreach (var reservation in Model)
                        {
                            <tr>
                                <td>
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <a asp-action="Details" asp-route-id="@reservation.Id">@reservation.ResourceName</a>
                                    }
                                    else
                                    {
                                        @reservation.ResourceName
                                    }
                                </td>
                                <td>@reservation.UserName</td>
                                <td>@reservation.StartDate.ToString("g")</td>
                                <td>@reservation.EndDate.ToString("g")</td>
                                <td>@reservation.GetTotalHours().ToString("F0")</td>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <td>
                                        @if (reservation.CanDelete)
                                        {
                                            <button onclick="deleteReservation(@reservation.Id)" class="btn btn-danger">DELETE</button>
                                        }
                                    </td>
                                }
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6">No reservations found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="col-md-4"> <!-- Right Column for API Info -->
            <h2>API Information</h2>
            <p>This functionality is also available as an API call.</p>
            <p>You can access it using the following <strong>cURL</strong> command:</p>
            <pre><code>curl -X GET "https://yourapiurl.com/grouped/resourceName"</code></pre>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Reusing the searchReservations logic

        let isAuthenticated = false;

        fetch('/users/me')
            .then(response => {
                if (response.ok) {
                    isAuthenticated = true;
                }
            })
            .catch(error => console.error('Error checking authentication:', error));

        function deleteReservation(id) {
            if (confirm('Are you sure you want to delete this reservation?')) {
                fetch(`/reservations/${id}`, { method: 'DELETE' })
                    .then(response => {
                        if (response.ok) {
                            window.location.reload();
                        } else {
                            alert('Failed to delete reservation.');
                        }
                    });
            }
        }

        document.getElementById('search-input').addEventListener('keyup', function () {
            clearTimeout(typingTimer);
            typingTimer = setTimeout(function () {
                const query = document.getElementById('search-input').value;
                searchReservations(query);
            }, doneTypingInterval);
        });

        function searchReservations(query) {
            fetch(`/reservations/grouped/${query || ''}`)
                .then(response => response.json())
                .then(data => {
                    const tableBody = document.getElementById('reservations-table-body');
                    tableBody.innerHTML = ''; 

                    if (data.length === 0) {
                        tableBody.innerHTML = '<tr><td colspan="6">No reservations found.</td></tr>';
                    } else {
                        data.forEach(dayGroup => {
                            dayGroup.reservations.forEach(reservation => {
                                const row = document.createElement('tr');
                                row.innerHTML = `
                                    <td>${isAuthenticated ? `<a href="/reservations/v/${reservation.id}">${dayGroup.resourceName}</a>` : dayGroup.resourceName}</td>
                                    <td>${reservation.userName}</td>
                                    <td>${new Date(reservation.startDate).toLocaleString()}</td>
                                    <td>${new Date(reservation.endDate).toLocaleString()}</td>
                                    <td>${reservation.totalHours.toFixed(0)}</td>
                                    ${reservation.canDelete ? `<td><button onclick="deleteReservation(${reservation.id})" class="btn btn-danger">DELETE</button></td>` : ''}
                                `;
                                tableBody.appendChild(row);
                            });
                        });
                    }
                })
                .catch(error => console.error('Something went wrong:', error));
        }
    </script>
}
